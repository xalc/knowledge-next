generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type PostMetadata {
  author     String
  coverImage String?
  date       String
  excerpt    String?
  tags       String[]
}

type PostStats {
  likes Int
  views Int
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  password  String
  posts     Post[]
}

model PostContent {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  content Json
  post    Post?
}

model Post {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  content     String?
  createdAt   DateTime     @db.Date
  description String
  metadata    PostMetadata
  slug        String       @unique
  stats       PostStats
  title       String
  updatedAt   DateTime     @db.Date
  userId      String       @db.ObjectId
  user        User         @relation(fields: [userId], references: [id])
  contentId   String       @unique @db.ObjectId
  postcontent PostContent  @relation(fields: [contentId], references: [id])
}

model WRMeta {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  keyName  String @unique
  keyValue String

  @@map("WR_meta")
}

model WRReadingSummary {
  id             String @id @map("_id")
  readingSeconds Int

  @@map("WR_reading_summary")
}

model WRBookShelt {
  id             String       @id @map("_id")
  bookId         String       @unique
  title          String
  author         String
  translator     String?
  cover          String
  publishTime           DateTime?
  category              String?
  categories            Json? 
  lPushName             String?
  readUpdateTime        Int?
  finishReading         Int
  readProgress          Json? 
  @@map("WR_book_shelt")
}
